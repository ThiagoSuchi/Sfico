var u=Object.defineProperty;var g=(r,e,t)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var n=(r,e,t)=>(g(r,typeof e!="symbol"?e+"":e,t),t);import{F as I,u as w,d as f,c as y,n as m,p as v,l as E,a as A,m as l,A as h,f as d,b as P}from"./FilterManagerGeneric-6a7a58a8.js";import{a as c,b as p}from"./config-abee4849.js";class D{createIncomes({valor:e,categoria:t,descricao:i,data:a}){return c.post("/incomes",{valor:e,categoria:t,descricao:i,data:a}).then(s=>s).catch(function(s){throw console.log("Erro ao criar receita: ",s.response.data),s})}getAllIncomes(e=0,t=7){return c.get(`/incomes?skip=${e}&per_page=${t}`).then(i=>i.data).catch(i=>(console.log("Erro ao fazer busca",i),null))}filterIncome({category:e,date:t,skip:i=0,perPage:a=7}){const s=new URLSearchParams;return e&&e!=="select"&&s.append("category",e),t&&s.append("date",t),s.append("skip",i.toString()),s.append("per_page",a.toString()),c.get(`/incomes/filter?${s}`).then(o=>o.data).catch(o=>{throw console.log("Erro ao buscar receitas filtradas: ",o),o})}updateIncomeById({id:e,...t}){return c.put(`/incomes/${e}`,t).then(i=>i).catch(i=>{throw console.log("erro ao atualizar receita: ",i),i})}deleteIncomeById(e){return c.delete(`/incomes/${e}`).then(t=>t).catch(t=>{throw console.log("Erro ao deletar receita",t),t})}}const N=new D;class F{constructor(){n(this,"divItems",document.querySelector(".item-income"));n(this,"divNewIncome",document.querySelector(".new-income"));n(this,"overlay",document.getElementById("new-item-overlay"));n(this,"income",N);n(this,"currentData",null);n(this,"filterManager");n(this,"currentPage",1);n(this,"skip",0);n(this,"perPage",7);this.filterManager=new I(this.divItems,e=>this.currentData=e,()=>this.setupDeleteListener(),()=>this.setupUpdateListener(),()=>this.getAllIncomes(),this.income,"incomes"),this.setupPaginationListener(),this.createIncome(),this.getAllIncomes(),this.filterIncome()}setupPaginationListener(){window.addEventListener("pageChanged",e=>{const{page:t,skip:i,context:a}=e.detail;a==="income"&&(this.currentPage=t,this.skip=i,this.filterManager.isFiltering&&this.filterManager.currentFilter?this.filterManager.applyFilter(this.filterManager.currentFilter,this.currentPage,this.skip,this.perPage):this.getAllIncomes())})}setupUpdateListener(){this.currentData&&w(this.currentData.incomes,this.divItems,this.divNewIncome,this.overlay,async(e,t)=>{await this.updateIncomeById(e,t)})}setupDeleteListener(){this.currentData&&f(this.divItems,async e=>{await this.deleteIncomeById(e)})}async createIncome(){const e=document.getElementById("btn-newReceita"),t=document.querySelector(".create-income");y(t,e,this.divNewIncome,this.overlay,async i=>{try{const a=await this.income.createIncomes(i);this.getAllIncomes(),this.divNewIncome.querySelectorAll("input").forEach(s=>s.value=""),this.divNewIncome.querySelectorAll("select").forEach(s=>s.value="select"),P(this.divNewIncome),l(JSON.stringify(a.data.message).replace(/^"|"$/g,"")),window.dispatchEvent(new CustomEvent("dataChanged",{detail:{context:"income"}}))}catch(a){(a instanceof h||p.isAxiosError(a))&&d(a,this.divNewIncome,this.overlay)}})}async getAllIncomes(){const e=await this.income.getAllIncomes(this.skip,this.perPage);if(!e||!e.incomes){this.currentData=null,m("Nenhuma receita criada.",this.divItems);return}this.currentData={...e,fetchedAt:new Date().toISOString(),page:this.currentPage,skip:this.skip};const t=e.pages||1;return v(this.currentPage,t,this.perPage,"income"),E(e.incomes,this.divItems),this.setupDeleteListener(),this.setupUpdateListener(),e.incomes}async filterIncome(){A(async(e,t)=>{try{this.filterManager.setFilterState(e,t),this.currentPage=1,this.skip=0,await this.filterManager.applyFilter({category:e,date:t},this.currentPage,this.skip,this.perPage)}catch{m("Nenhuma receita encontrada.",this.divItems)}})}async updateIncomeById(e,t){try{const a={id:this.currentData.incomes[e].id,...t},s=await this.income.updateIncomeById(a);l(JSON.stringify(s.data.message).replace(/^"|"$/g,"")),window.dispatchEvent(new CustomEvent("dataChanged",{detail:{context:"income"}})),this.getAllIncomes()}catch(i){(i instanceof h||p.isAxiosError(i))&&d(i,this.divNewIncome,this.overlay)}}async deleteIncomeById(e){const t=this.currentData.incomes[e].id,i=await this.income.deleteIncomeById(t);l(JSON.stringify(i.data.message).replace(/^"|"$/g,"")),window.dispatchEvent(new CustomEvent("dataChanged",{detail:{context:"income"}})),this.getAllIncomes()}}export{F as ManagerIncomes};

var u=Object.defineProperty;var g=(i,e,t)=>e in i?u(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var r=(i,e,t)=>(g(i,typeof e!="symbol"?e+"":e,t),t);import{F as E,u as m,d as w,c as f,n as l,p as y,l as v,a as I,m as o,A as d,f as h,b as A}from"./FilterManagerGeneric-6a7a58a8.js";import{a as p,b as x}from"./config-abee4849.js";class D{createExpense({valor:e,categoria:t,descricao:s,data:n}){return p.post("/expenses",{valor:e,categoria:t,descricao:s,data:n}).then(a=>a).catch(function(a){throw console.log("Erro ao criar despesa: ",a.response.data),a})}getAllExpenses(e=0,t=7){return p.get(`/expenses?skip=${e}&per_page=${t}`).then(s=>s.data).catch(s=>(console.log("Erro ao fazer busca",s),null))}filterExpense({category:e,date:t,skip:s=0,perPage:n=7}){const a=new URLSearchParams;return e&&e!=="select"&&a.append("category",e),t&&a.append("date",t),a.append("skip",s.toString()),a.append("per_page",n.toString()),p.get(`/expenses/filter?${a}`).then(c=>c.data).catch(c=>{throw console.log("Erro ao buscar despesas filtradas: ",c),c})}updateExpenseById({id:e,...t}){return p.put(`/expenses/${e}`,t).then(s=>s).catch(s=>{throw console.log("erro ao atualizar despesa: ",s),s})}deleteExpenseById(e){return p.delete(`/expenses/${e}`).then(t=>t).catch(t=>{throw console.log("Erro ao deletar despesa",t),t})}}const P=new D;class B{constructor(){r(this,"divItems",document.querySelector(".item-expense"));r(this,"divNewExpense",document.querySelector(".new-expense"));r(this,"overlay",document.getElementById("new-item-overlay"));r(this,"expense",P);r(this,"currentData",null);r(this,"filterManager");r(this,"currentPage",1);r(this,"skip",0);r(this,"perPage",7);this.filterManager=new E(this.divItems,e=>this.currentData=e,()=>this.setupDeleteListener(),()=>this.setupUpdateListener(),()=>this.getAllExpenses(),this.expense,"expenses"),this.setupPaginationListener(),this.createExpense(),this.getAllExpenses(),this.filterExpense()}setupPaginationListener(){window.addEventListener("pageChanged",e=>{const{page:t,skip:s,context:n}=e.detail;n==="expense"&&(this.currentPage=t,this.skip=s,this.filterManager.isFiltering&&this.filterManager.currentFilter?this.filterManager.applyFilter(this.filterManager.currentFilter,this.currentPage,this.skip,this.perPage):this.getAllExpenses())})}setupUpdateListener(){this.currentData&&m(this.currentData.expenses,this.divItems,this.divNewExpense,this.overlay,async(e,t)=>{await this.updateExpenseById(e,t)})}setupDeleteListener(){this.currentData&&w(this.divItems,async e=>{await this.deleteExpenseById(e)})}async createExpense(){const e=document.getElementById("btn-newDespesa"),t=document.querySelector(".create-expense");f(t,e,this.divNewExpense,this.overlay,async s=>{try{const n=await this.expense.createExpense(s);this.getAllExpenses(),this.divNewExpense.querySelectorAll("input").forEach(a=>a.value=""),this.divNewExpense.querySelectorAll("select").forEach(a=>a.value="select"),A(this.divNewExpense),o(JSON.stringify(n.data.message).replace(/^"|"$/g,"")),window.dispatchEvent(new CustomEvent("dataChanged",{detail:{context:"expense"}}))}catch(n){(n instanceof d||x.isAxiosError(n))&&h(n,this.divNewExpense,this.overlay)}})}async getAllExpenses(){const e=await this.expense.getAllExpenses(this.skip,this.perPage);if(!e||!e.expenses){this.currentData=null,l("Nenhuma despesa criada.",this.divItems);return}this.currentData={...e,fetchedAt:new Date().toISOString(),page:this.currentPage,skip:this.skip};const t=e.pages||1;return y(this.currentPage,t,this.perPage,"expense"),v(e.expenses,this.divItems),this.setupDeleteListener(),this.setupUpdateListener(),e.expenses}async filterExpense(){I(async(e,t)=>{try{this.filterManager.setFilterState(e,t),this.currentPage=1,this.skip=0,await this.filterManager.applyFilter({category:e,date:t},this.currentPage,this.skip,this.perPage)}catch{l("Nenhuma despesa encontrada.",this.divItems)}},"expense")}async updateExpenseById(e,t){try{const n={id:this.currentData.expenses[e].id,...t},a=await this.expense.updateExpenseById(n);o(JSON.stringify(a.data.message).replace(/^"|"$/g,"")),window.dispatchEvent(new CustomEvent("dataChanged",{detail:{context:"expense"}})),this.getAllExpenses()}catch(s){(s instanceof d||x.isAxiosError(s))&&h(s,this.divNewExpense,this.overlay)}}async deleteExpenseById(e){const t=this.currentData.expenses[e].id,s=await this.expense.deleteExpenseById(t);o(JSON.stringify(s.data.message).replace(/^"|"$/g,"")),window.dispatchEvent(new CustomEvent("dataChanged",{detail:{context:"expense"}})),this.getAllExpenses()}}export{B as ManagerExpenses};
